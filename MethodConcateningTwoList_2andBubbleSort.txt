using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Xml.Schema;

namespace Strings_11
{
    class Program

    //Write a function that merges two sorted lists into a new sorted list.
    //[1,4,6], [2,3,5] â†’ [1,2,3,4,5,6]. You can do this quicker than concatenating them followed by a sort.

    {

        public static List<int> SumOfList(List<int> numbers, List<int> numbersTwo)
        {
            var sumOfLists = new List<int>() { }; // New list for sum  
            for (int i = 0; i < numbers.Count; ++i)
            {
                sumOfLists.Add(numbers[i]);// adding first list
            }
            for (int i = 0; i < numbersTwo.Count; ++i)
            {
                sumOfLists.Add(numbersTwo[i]);//adding second list
            }
            return sumOfLists;
        }

        public static List<int> bubbleSort(List<int> List)
        {
            int i, j;
            for (i = 0; i <= List.Count-2; ++i)
            {
                for (j = 0; j <= List.Count - 2; ++j)
                {
                    if (List[j] > List[j + 1])
                    {
                        int temp = List[j];
                        List[j] = List[j + 1];
                        List[j + 1] = temp;
                    }

                }
            }
            return List;
        }


        static void Main(string[] args)
        {
            var numbers = new List<int>() { 1, 3, 5, 7, 1, 7, 9 };
            var numbersTwo = new List<int>() { 33333115, 3, 999, 1244, 98236 };
            var sumOfLists = SumOfList(numbers, numbersTwo);
            var sortedList = bubbleSort(sumOfLists);
            
            foreach (var i in sortedList)
            {
                Console.Write(i + " ");
            }
            Console.ReadLine();
        }
    }
}
